/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sudokuproject.sudokuworldsaga.ui;

import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import sudokuproject.sudokuworldsaga.domain.Sudoku;
import sudokuproject.sudokuworldsaga.domain.SudokuGenerator;
import sudokuproject.sudokuworldsaga.domain.SudokuSolver;
import sudokuproject.sudokuworldsaga.fileio.FileManager;

/**
 * SudokuWorldSaga alpha version Graphical User Interface
 *
 * @author Henri
 *  
 */
public class SudokuWorldSaga extends javax.swing.JFrame {

    private Sudoku sudoku;
    private int difficultyValue = 0;
    
    /**
     * Creates new form GameGUIManager
     */
    public SudokuWorldSaga() {
        initComponents();
        setFileChooserFilter();
    }
    
    private void setFileChooserFilter() {
        FileFilter filter = new FileNameExtensionFilter("Sudoku file", "sudoku");
        jFileChooser.addChoosableFileFilter(filter);
        jFileChooser.setFileFilter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        sudokuBoardBorder = new javax.swing.JPanel();
        sudokuPanel1 = new sudokuproject.sudokuworldsaga.ui.SudokuBoard.SudokuPanel();
        newSudokuButton = new javax.swing.JButton();
        loadSudokuButton = new javax.swing.JButton();
        solveButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        newUnsolvedSudokuButton = new javax.swing.JButton();
        difficultySlider = new javax.swing.JSlider();
        difficultyLabel = new javax.swing.JLabel();
        difficultyValueText = new javax.swing.JTextField();
        title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sudoku Game");
        setBackground(new java.awt.Color(153, 153, 153));
        setResizable(false);

        sudokuBoardBorder.setBackground(new java.awt.Color(255, 255, 255));
        sudokuBoardBorder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0), 5));
        sudokuBoardBorder.setPreferredSize(new java.awt.Dimension(450, 450));
        sudokuBoardBorder.setLayout(new java.awt.GridLayout(1, 0));
        sudokuBoardBorder.add(sudokuPanel1);

        newSudokuButton.setBackground(new java.awt.Color(0, 0, 0));
        newSudokuButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        newSudokuButton.setForeground(new java.awt.Color(255, 255, 255));
        newSudokuButton.setText("New Empty");
        newSudokuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSudokuButtonActionPerformed(evt);
            }
        });

        loadSudokuButton.setBackground(new java.awt.Color(0, 0, 0));
        loadSudokuButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        loadSudokuButton.setForeground(new java.awt.Color(255, 255, 255));
        loadSudokuButton.setText("Load Sudoku");
        loadSudokuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadSudokuButtonActionPerformed(evt);
            }
        });

        solveButton.setBackground(new java.awt.Color(0, 0, 0));
        solveButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        solveButton.setForeground(new java.awt.Color(255, 255, 255));
        solveButton.setText("Solve Sudoku");
        solveButton.setEnabled(false);
        solveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveButtonActionPerformed(evt);
            }
        });

        jPanel1.setMinimumSize(new java.awt.Dimension(350, 127));
        jPanel1.setLayout(new java.awt.GridLayout(5, 3));

        newUnsolvedSudokuButton.setBackground(new java.awt.Color(0, 0, 0));
        newUnsolvedSudokuButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        newUnsolvedSudokuButton.setForeground(new java.awt.Color(255, 255, 255));
        newUnsolvedSudokuButton.setText("New Unsolved");
        newUnsolvedSudokuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUnsolvedSudokuButtonActionPerformed(evt);
            }
        });

        difficultySlider.setMaximum(60);
        difficultySlider.setValue(0);
        difficultySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                difficultySliderStateChanged(evt);
            }
        });

        difficultyLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        difficultyLabel.setLabelFor(difficultySlider);
        difficultyLabel.setText("Sudoku difficulty [0, 60]");

        difficultyValueText.setText("0");
        difficultyValueText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                difficultyValueTextKeyPressed(evt);
            }
        });

        title.setFont(new java.awt.Font("Rod", 1, 18)); // NOI18N
        title.setText("<html><center><font color='red'><b>Sudoku World Saga</b></font></center></html>");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kissa.jpeg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sudokuBoardBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(difficultyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(newSudokuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(loadSudokuButton)
                                .addComponent(solveButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(difficultySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(difficultyValueText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(newUnsolvedSudokuButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {loadSudokuButton, newSudokuButton, solveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(solveButton)
                        .addGap(18, 18, 18)
                        .addComponent(loadSudokuButton)
                        .addGap(18, 18, 18)
                        .addComponent(newSudokuButton)
                        .addGap(18, 18, 18)
                        .addComponent(newUnsolvedSudokuButton)
                        .addGap(11, 11, 11)
                        .addComponent(difficultyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(difficultySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(difficultyValueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addComponent(sudokuBoardBorder, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void solveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveButtonActionPerformed
        // Action when solve Sudoku button is clicked
        sudoku = SudokuSolver.solve(sudoku);
        sudokuPanel1.updateValues(sudoku);
        solveButton.setEnabled(false);
    }//GEN-LAST:event_solveButtonActionPerformed

    private void newSudokuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSudokuButtonActionPerformed
        // Action when new empty Sudoku button is clicked
        sudoku = new Sudoku(3, 3);
        sudokuPanel1.updateValues(sudoku);
        solveButton.setEnabled(true);
    }//GEN-LAST:event_newSudokuButtonActionPerformed

    private void loadSudokuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadSudokuButtonActionPerformed
        // Action when load Sudoku button is clicked
        // sudokuArea.setText("Opening");
        int returnVal = jFileChooser.showOpenDialog(SudokuWorldSaga.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            Sudoku loadedSudoku = FileManager.loadSudokuFromFile(file);
            if (loadedSudoku != null) {
                sudoku = loadedSudoku;
                sudokuPanel1.updateValues(sudoku);
                solveButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_loadSudokuButtonActionPerformed

    private void newUnsolvedSudokuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUnsolvedSudokuButtonActionPerformed
        // Action when new unsolved Sudoku button is clicked
        sudoku = SudokuGenerator.genNewSudoku(3, 3, difficultyValue);
        sudokuPanel1.updateValues(sudoku);
        solveButton.setEnabled(true);
    }//GEN-LAST:event_newUnsolvedSudokuButtonActionPerformed

    private void difficultySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_difficultySliderStateChanged
        difficultyValueText.setText(difficultySlider.getValue() + "");
        difficultyValue = difficultySlider.getValue();
    }//GEN-LAST:event_difficultySliderStateChanged

    private void difficultyValueTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_difficultyValueTextKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            int value = 0;
            try {
                value = Integer.parseInt(difficultyValueText.getText());
                if (value < 0) {
                    value = 0;
                    difficultyValueText.setText(value + "");
                } else if (value > 60) {
                    value = 60;
                    difficultyValueText.setText(value + "");
                }
            } catch (Exception ex) {
                value = 0;
                difficultyValueText.setText("0");
            }
            difficultySlider.setValue(value);
            difficultyValue = value;
        }
    }//GEN-LAST:event_difficultyValueTextKeyPressed

    /**
     * Launches the GUI
     */
    
    
    public static void launch() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SudokuWorldSaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SudokuWorldSaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SudokuWorldSaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SudokuWorldSaga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudokuWorldSaga().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel difficultyLabel;
    private javax.swing.JSlider difficultySlider;
    private javax.swing.JTextField difficultyValueText;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loadSudokuButton;
    private javax.swing.JButton newSudokuButton;
    private javax.swing.JButton newUnsolvedSudokuButton;
    private javax.swing.JButton solveButton;
    private javax.swing.JPanel sudokuBoardBorder;
    private sudokuproject.sudokuworldsaga.ui.SudokuBoard.SudokuPanel sudokuPanel1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
